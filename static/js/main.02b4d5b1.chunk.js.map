{"version":3,"sources":["components/Feedback.js","components/DisplayFeedback.js","components/Form.js","App.js","reportWebVitals.js","index.js"],"names":["Feedback","className","this","props","name","department","rating","Component","DisplayFeedback","propsEmployeeArray","map","item","index","id","Form","state","employeeArray","handleSubmit","event","preventDefault","tempObj","Date","getTime","tempEmployeeArray","push","setState","console","log","handleChange","target","value","onSubmit","e","htmlFor","type","onChange","required","length","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mWAGMA,E,4JACJ,WACE,OACE,sBAAKC,UAAU,eAAf,kBACQC,KAAKC,MAAMC,KADnB,iBACuCF,KAAKC,MAAME,WADlD,YAEGH,KAAKC,MAAMG,c,GALGC,aAWRP,ICVTQ,E,4JACJ,WACE,OACE,mCACE,qBAAKP,UAAU,sBAAf,SACGC,KAAKC,MAAMM,mBAAmBC,KAAI,SAACC,EAAMC,GACxC,OACE,cAAC,EAAD,CAEER,KAAMO,EAAKP,KACXC,WAAYM,EAAKN,WACjBC,OAAQK,EAAKL,QAHRK,EAAKE,e,GARIN,aAqBfC,ICrBTM,E,4MACJC,MAAQ,CACNC,cAAe,GACfH,GAAI,GACJT,KAAM,GACNC,WAAY,GACZC,OAAQ,I,EAGVW,aAAe,SAACC,GACdA,EAAMC,iBACN,IACMC,EAAU,CACdP,IAFM,IAAIQ,MAEJC,UACNlB,KAAM,EAAKW,MAAMX,KACjBC,WAAY,EAAKU,MAAMV,WACvBC,OAAQ,EAAKS,MAAMT,QAGfiB,EAAiB,YAAO,EAAKR,MAAMC,eACzCO,EAAkBC,KAAKJ,GACvB,EAAKK,SAAS,CAAET,cAAeO,IAAqB,kBAClDG,QAAQC,IAAI,EAAKZ,UAGnB,EAAKU,SAAS,CAAEZ,GAAI,GAAIT,KAAM,GAAIC,WAAY,GAAIC,OAAQ,M,EAG5DsB,aAAe,SAACV,GACd,EAAKO,SAAL,eAAiBP,EAAMW,OAAOhB,GAAKK,EAAMW,OAAOC,S,4CAGlD,WAAU,IAAD,OACP,OACE,sBAAK7B,UAAU,iBAAf,UACE,uBAAMA,UAAU,gBAAgB8B,SAAU,SAACC,GAAD,OAAO,EAAKf,aAAae,IAAnE,UACE,gCACE,uBAAOC,QAAQ,WAAf,kBACA,uBACEC,KAAK,OACLrB,GAAG,OACHiB,MAAO5B,KAAKa,MAAMX,KAClB+B,SAAU,SAACH,GAAD,OAAO,EAAKJ,aAAaI,IACnCI,UAAQ,OAGZ,gCACE,uBAAOH,QAAQ,iBAAf,wBACA,uBACEC,KAAK,OACLrB,GAAG,aACHiB,MAAO5B,KAAKa,MAAMV,WAClB8B,SAAU,SAACH,GAAD,OAAO,EAAKJ,aAAaI,IACnCI,UAAQ,OAGZ,gCACE,uBAAOH,QAAQ,aAAf,oBACA,uBACEC,KAAK,OACLrB,GAAG,SACHiB,MAAO5B,KAAKa,MAAMT,OAClB6B,SAAU,SAACH,GAAD,OAAO,EAAKJ,aAAaI,IACnCI,UAAQ,OAGZ,8BACE,wBAAQF,KAAK,SAAb,sBAEF,8BACE,4BAIiC,IAApChC,KAAKa,MAAMC,cAAcqB,OACxB,cAAC,EAAD,CAAiB5B,mBAAoBP,KAAKa,MAAMC,gBAC9C,Y,GA5EOT,aAkFJO,IClFTwB,E,4JACJ,WACE,OACE,sBAAKrC,UAAU,MAAf,UACE,wDACA,qBAAKA,UAAU,iBAAf,SACE,cAAC,EAAD,a,GANQM,aAaH+B,ICLAC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.02b4d5b1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./Feedback.css\";\r\n\r\nclass Feedback extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"feedback-box\">\r\n        Name:{this.props.name} | Department:{this.props.department} |Rating:\r\n        {this.props.rating}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Feedback;\r\n","import React, { Component } from \"react\";\r\nimport \"./DisplayFeedback.css\";\r\nimport Feedback from \"./Feedback\";\r\n\r\nclass DisplayFeedback extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"feedbacks-container\">\r\n          {this.props.propsEmployeeArray.map((item, index) => {\r\n            return (\r\n              <Feedback\r\n                key={item.id}\r\n                name={item.name}\r\n                department={item.department}\r\n                rating={item.rating}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DisplayFeedback;\r\n","import React, { Component } from \"react\";\r\nimport \"./Form.css\";\r\nimport DisplayFeedback from \"./DisplayFeedback\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    employeeArray: [],\r\n    id: \"\",\r\n    name: \"\",\r\n    department: \"\",\r\n    rating: \"\",\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    let d = new Date();\r\n    const tempObj = {\r\n      id: d.getTime(),\r\n      name: this.state.name,\r\n      department: this.state.department,\r\n      rating: this.state.rating,\r\n    };\r\n\r\n    const tempEmployeeArray = [...this.state.employeeArray];\r\n    tempEmployeeArray.push(tempObj);\r\n    this.setState({ employeeArray: tempEmployeeArray }, () =>\r\n      console.log(this.state)\r\n    );\r\n\r\n    this.setState({ id: \"\", name: \"\", department: \"\", rating: \"\" });\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    this.setState({ [event.target.id]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"form-container\">\r\n        <form className=\"feedback-form\" onSubmit={(e) => this.handleSubmit(e)}>\r\n          <div>\r\n            <label htmlFor=\"emp-name\">Name</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              value={this.state.name} /////////Doubt\r\n              onChange={(e) => this.handleChange(e)}\r\n              required\r\n            ></input>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"emp-department\">Department</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"department\"\r\n              value={this.state.department}\r\n              onChange={(e) => this.handleChange(e)}\r\n              required\r\n            ></input>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"emp-Rating\">Rating</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"rating\"\r\n              value={this.state.rating} /////////Doubt\r\n              onChange={(e) => this.handleChange(e)}\r\n              required\r\n            ></input>\r\n          </div>\r\n          <div>\r\n            <button type=\"submit\">Submit</button>\r\n          </div>\r\n          <div>\r\n            <hr />\r\n          </div>\r\n        </form>\r\n\r\n        {this.state.employeeArray.length !== 0 ? (\r\n          <DisplayFeedback propsEmployeeArray={this.state.employeeArray} />\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Form from \"./components/Form\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Employee Feedback Form</h1>\n        <div className=\"form-container\">\n          <Form />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["logo.svg","components/Feedback.js","components/DisplayFeedback.js","components/Form.js","App.js","reportWebVitals.js","index.js"],"names":["Feedback","className","this","props","name","department","rating","Component","DisplayFeedback","nameArray","map","item","index","departmentArray","ratingArray","Form","state","id","displayFeedback","d","Date","empName","document","getElementById","value","empDepartment","empRating","setState","getTime","push","action","htmlFor","type","required","onSubmit","length","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"mTAAe,I,8BCGTA,E,4JACJ,WACE,OACE,sBAAKC,UAAU,eAAf,kBACQC,KAAKC,MAAMC,KADnB,iBACuCF,KAAKC,MAAME,WADlD,YAEGH,KAAKC,MAAMG,c,GALGC,aAWRP,ICVTQ,E,4JACJ,WAAU,IAAD,OACP,OACE,mCACE,qBAAKP,UAAU,sBAAf,SACGC,KAAKC,MAAMM,UAAUC,KAAI,SAACC,EAAMC,GAC/B,OACE,cAAC,EAAD,CACER,KAAM,EAAKD,MAAMM,UAAUG,GAE3BP,WAAY,EAAKF,MAAMU,gBAAgBD,GACvCN,OAAQ,EAAKH,MAAMW,YAAYF,IAF1BA,c,GATSL,aA2BfC,IC3BTO,E,4MAkBJC,MAAQ,CACNC,GAAI,KACJb,KAAM,GACNC,WAAY,GACZC,OAAQ,I,EAGVY,gBAAkB,WAChB,IAAIC,EAAI,IAAIC,KACRC,EAAUC,SAASC,eAAe,YAAYC,MAC9CC,EAAgBH,SAASC,eAAe,kBAAkBC,MAC1DE,EAAYJ,SAASC,eAAe,cAAcC,MACtD,EAAKG,SAAS,CAAEV,GAAIE,EAAES,YACtB,EAAKZ,MAAMZ,KAAKyB,KAAKR,GACrB,EAAKL,MAAMX,WAAWwB,KAAKJ,GAC3B,EAAKT,MAAMV,OAAOuB,KAAKH,GACvBJ,SAASC,eAAe,YAAYC,MAAQ,GAC5CF,SAASC,eAAe,kBAAkBC,MAAQ,GAClDF,SAASC,eAAe,cAAcC,MAAQ,I,4CAGhD,WAAU,IAAD,OACP,OACE,sBAAKvB,UAAU,iBAAf,UACE,uBAAM6B,OAAO,IAAI7B,UAAU,gBAA3B,UACE,gCACE,uBAAO8B,QAAQ,WAAf,kBACA,uBAAOC,KAAK,OAAOf,GAAG,WAAWgB,UAAQ,OAE3C,gCACE,uBAAOF,QAAQ,iBAAf,wBACA,uBAAOC,KAAK,OAAOf,GAAG,iBAAiBgB,UAAQ,OAEjD,gCACE,uBAAOF,QAAQ,aAAf,oBACA,uBAAOC,KAAK,OAAOf,GAAG,aAAagB,UAAQ,OAE7C,8BACE,wBAAQC,SAAU,kBAAM,EAAKhB,mBAA7B,sBAEF,8BACE,4BAIwB,IAA3BhB,KAAKc,MAAMZ,KAAK+B,OACf,cAAC,EAAD,CACE1B,UAAWP,KAAKc,MAAMZ,KACtBS,gBAAiBX,KAAKc,MAAMX,WAC5BS,YAAaZ,KAAKc,MAAMV,SAExB,Y,GArEOC,aAmFJQ,IClFTqB,E,4JACJ,WACE,OACE,sBAAKnC,UAAU,MAAf,UACE,wDACA,qBAAKA,UAAU,iBAAf,SACE,cAAC,EAAD,a,GANQM,aAaH6B,ICNAC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF1B,SAASC,eAAe,SAM1Bc,M","file":"static/js/main.18305e8e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from \"react\";\r\nimport \"./Feedback.css\";\r\n\r\nclass Feedback extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"feedback-box\">\r\n        Name:{this.props.name} | Department:{this.props.department} |Rating:\r\n        {this.props.rating}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Feedback;\r\n","import React, { Component } from \"react\";\r\nimport \"./DisplayFeedback.css\";\r\nimport Feedback from \"./Feedback\";\r\n\r\nclass DisplayFeedback extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"feedbacks-container\">\r\n          {this.props.nameArray.map((item, index) => {\r\n            return (\r\n              <Feedback\r\n                name={this.props.nameArray[index]}\r\n                key={index}\r\n                department={this.props.departmentArray[index]}\r\n                rating={this.props.ratingArray[index]}\r\n              />\r\n            );\r\n          })}\r\n\r\n          {/* <Feedback\r\n          name={this.props.name}\r\n          department={this.props.department}\r\n          rating={this.props.rating}\r\n        /> */}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DisplayFeedback;\r\n","import React, { Component } from \"react\";\r\nimport \"./Form.css\";\r\nimport DisplayFeedback from \"./DisplayFeedback\";\r\n\r\nclass Form extends Component {\r\n  // state = {\r\n  //   name: null,\r\n  //   department: null,\r\n  //   rating: null,\r\n  // };\r\n\r\n  // displayFeedback = () => {\r\n  //   let empName = document.getElementById(\"emp-name\").value;\r\n  //   let empDepartment = document.getElementById(\"emp-department\").value;\r\n  //   let empRating = document.getElementById(\"emp-Rating\").value;\r\n  //   this.setState({\r\n  //     name: empName,\r\n  //     department: empDepartment,\r\n  //     rating: empRating,\r\n  //   });\r\n  // };\r\n\r\n  state = {\r\n    id: null,\r\n    name: [],\r\n    department: [],\r\n    rating: [],\r\n  };\r\n\r\n  displayFeedback = () => {\r\n    let d = new Date();\r\n    let empName = document.getElementById(\"emp-name\").value;\r\n    let empDepartment = document.getElementById(\"emp-department\").value;\r\n    let empRating = document.getElementById(\"emp-Rating\").value;\r\n    this.setState({ id: d.getTime() });\r\n    this.state.name.push(empName);\r\n    this.state.department.push(empDepartment);\r\n    this.state.rating.push(empRating);\r\n    document.getElementById(\"emp-name\").value = \"\";\r\n    document.getElementById(\"emp-department\").value = \"\";\r\n    document.getElementById(\"emp-Rating\").value = \"\";\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"form-container\">\r\n        <form action=\"#\" className=\"feedback-form\">\r\n          <div>\r\n            <label htmlFor=\"emp-name\">Name</label>\r\n            <input type=\"text\" id=\"emp-name\" required></input>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"emp-department\">Department</label>\r\n            <input type=\"text\" id=\"emp-department\" required></input>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"emp-Rating\">Rating</label>\r\n            <input type=\"text\" id=\"emp-Rating\" required></input>\r\n          </div>\r\n          <div>\r\n            <button onSubmit={() => this.displayFeedback()}>Submit</button>\r\n          </div>\r\n          <div>\r\n            <hr />\r\n          </div>\r\n        </form>\r\n\r\n        {this.state.name.length !== 0 ? (\r\n          <DisplayFeedback\r\n            nameArray={this.state.name}\r\n            departmentArray={this.state.department}\r\n            ratingArray={this.state.rating}\r\n          />\r\n        ) : null}\r\n\r\n        {/* {if(this.state.name.length!=0){    //Doubt\r\n             <DisplayFeedback\r\n              nameArray={this.state.name}\r\n            departmentArray={this.state.department}\r\n            ratingArray={this.state.rating}\r\n           />\r\n        }}; */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import logo from \"./logo.svg\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport Form from \"./components/Form\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Employee Feedback Form</h1>\n        <div className=\"form-container\">\n          <Form />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}